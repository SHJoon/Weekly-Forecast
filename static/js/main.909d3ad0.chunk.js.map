{"version":3,"sources":["styles/Search.module.css","styles/Forecast.module.css","components/Search.js","components/Card.js","components/Forecast.js","components/InputError.js","views/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Search","setIsError","city","setCity","setForecast","setRenderedUnit","useState","tempUnit","setTempUnit","onSubmit","e","preventDefault","length","uriEncodedCity","encodeURIComponent","axios","get","process","then","res","status","Error","data","catch","err","console","error","handleSubmit","className","type","placeholder","value","onChange","target","name","checked","styles","button","moment","require","Card","dailyReading","renderedUnit","today","Date","weekday","dt","setTime","imgURL","weather","id","format","Math","round","main","temp","description","Forecast","forecast","title","cod","country","list","filter","info","dt_txt","includes","map","idx","InputError","style","color","Homepage","isError","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.909d3ad0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Search_button__1eiXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Forecast_title__3bM9_\"};","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport styles from \"../styles/Search.module.css\";\r\n\r\nconst Search = ({\r\n  setIsError,\r\n  city,\r\n  setCity,\r\n  setForecast,\r\n  setRenderedUnit,\r\n}) => {\r\n  const [tempUnit, setTempUnit] = useState(\"imperial\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (city.length !== 0) {\r\n      setIsError(false);\r\n      let uriEncodedCity = encodeURIComponent(city);\r\n      axios\r\n        .get(\r\n          `http://api.openweathermap.org/data/2.5/forecast?q=${uriEncodedCity}&appid=${process.env.REACT_APP_API_KEY}&units=${tempUnit}`\r\n        )\r\n        .then((res) => {\r\n          if (res.status !== 200) {\r\n            throw new Error();\r\n          }\r\n          tempUnit === \"imperial\" ? setRenderedUnit(\"F\") : setRenderedUnit(\"C\");\r\n          setForecast(res.data);\r\n          setIsError(false);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          setIsError(true);\r\n        });\r\n    } else {\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <input\r\n          className=\"px-2\"\r\n          type=\"text\"\r\n          placeholder=\"Enter city name.\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        <label className=\"px-2\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"unit\"\r\n            checked={tempUnit === \"imperial\"}\r\n            value=\"imperial\"\r\n            onChange={(e) => setTempUnit(e.target.value)}\r\n          />\r\n          F\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"unit\"\r\n            checked={tempUnit === \"metric\"}\r\n            value=\"metric\"\r\n            onChange={(e) => setTempUnit(e.target.value)}\r\n          />\r\n          C\r\n        </label>\r\n\r\n        <input\r\n          className={`${styles.button} btn btn-primary mb-4`}\r\n          type=\"submit\"\r\n          value=\"Retrieve forecast information\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nvar moment = require(\"moment\");\r\n\r\nconst Card = ({ dailyReading, renderedUnit }) => {\r\n  let today = new Date();\r\n  const weekday = dailyReading.dt * 1000;\r\n  today.setTime(weekday);\r\n\r\n  const imgURL = `owf owf-${dailyReading.weather[0].id} owf-5x`;\r\n\r\n  return (\r\n    <div className=\"col-lg-2 col-md-5 col-sm-12 col-xs-12\">\r\n      <div>\r\n        <div>\r\n          <h4>{moment(today).format(\"dddd\")}</h4>\r\n          <p>{moment(today).format(\"MMMM Do, h:mm a\")}</p>\r\n        </div>\r\n        <div>\r\n          <i className={imgURL}></i>\r\n          <h2>\r\n            {Math.round(dailyReading.main.temp)} Â°{renderedUnit}\r\n          </h2>\r\n          <div>\r\n            <p>{dailyReading.weather[0].description}</p>\r\n          </div>\r\n        </div>\r\n        <hr className=\"mx-6\"></hr>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Card from \"./Card\";\r\n\r\nimport styles from \"../styles/Forecast.module.css\";\r\n\r\nconst Forecast = ({ forecast, renderedUnit }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className={`display-2 jumbotron ${styles.title}`}>5-Day Forecast</h1>\r\n      {forecast?.cod === \"200\" ? (\r\n        <span>\r\n          <h5 className=\"display-4 mb-4\">\r\n            {forecast.city.name}, {forecast.city.country}\r\n          </h5>\r\n          <div className=\"row justify-content-center\">\r\n            {forecast.list\r\n              .filter((info) => {\r\n                return info.dt_txt.includes(\"18:00:00\");\r\n              })\r\n              .map((dailyReading, idx) => {\r\n                return (\r\n                  <Card\r\n                    key={idx}\r\n                    dailyReading={dailyReading}\r\n                    renderedUnit={renderedUnit}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n        </span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import React from 'react';\r\n\r\nconst InputError = () => {\r\n\r\n    return(\r\n        <div style={{color:\"red\"}}>Please enter a valid city</div>\r\n    )\r\n}\r\n\r\nexport default InputError;","import React, { useState } from \"react\";\r\n\r\nimport Search from \"../components/Search\";\r\nimport Forecast from \"../components/Forecast\";\r\nimport InputError from \"../components/InputError\";\r\n\r\nconst Homepage = () => {\r\n  const [isError, setIsError] = useState(false);\r\n  const [city, setCity] = useState(\"\");\r\n  const [forecast, setForecast] = useState(null);\r\n  const [renderedUnit, setRenderedUnit] = useState(\"F\");\r\n\r\n  return (\r\n    <div>\r\n      <h1>Weather Forecast</h1>\r\n      <Search\r\n        setIsError={setIsError}\r\n        city={city}\r\n        setCity={setCity}\r\n        setForecast={setForecast}\r\n        setRenderedUnit={setRenderedUnit}\r\n      />\r\n      {isError && <InputError />}\r\n      <Forecast forecast={forecast} renderedUnit={renderedUnit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Homepage from \"./views/Homepage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}